Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `//` из файла и пытается записать в буфер.

Производитель успешно записал строку `//` буфер.

Производитель получил строку `// Created by owlet on 05.11.2019.` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `// Created by owlet on 05.11.2019.` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `// Created by owlet on 05.11.2019.` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `// Created by owlet on 05.11.2019.` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `// Created by owlet on 05.11.2019.` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `// Created by owlet on 05.11.2019.` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `// Created by owlet on 05.11.2019.` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `//` из буфера.

Производитель получил строку `// Created by owlet on 05.11.2019.` из файла и пытается записать в буфер.

Производитель успешно записал строку `// Created by owlet on 05.11.2019.` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `// Created by owlet on 05.11.2019.` из буфера.

Производитель получил строку `//` из файла и пытается записать в буфер.

Производитель успешно записал строку `//` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `//` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `/*` из файла и пытается записать в буфер.

Производитель успешно записал строку `/*` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `/*` из буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `Задание 1. (10%)` из файла и пытается записать в буфер.

Производитель успешно записал строку `Задание 1. (10%)` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `Задание 1. (10%)` из буфера.

Производитель получил строку `Написать программу, копирующую одну матрицу в другую, с` из файла и пытается записать в буфер.

Производитель успешно записал строку `Написать программу, копирующую одну матрицу в другую, с` буфер.

Производитель получил строку `использованием буферной переменной.` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `Написать программу, копирующую одну матрицу в другую, с` из буфера.

Производитель получил строку `использованием буферной переменной.` из файла и пытается записать в буфер.

Производитель успешно записал строку `использованием буферной переменной.` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `использованием буферной переменной.` из буфера.

Производитель получил строку `*/` из файла и пытается записать в буфер.

Производитель успешно записал строку `*/` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `*/` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `#include <iostream>` из файла и пытается записать в буфер.

Производитель успешно записал строку `#include <iostream>` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `#include <iostream>` из буфера.

Производитель получил строку `#include <cstdlib>` из файла и пытается записать в буфер.

Производитель успешно записал строку `#include <cstdlib>` буфер.

Производитель получил строку `#include <thread>` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `#include <cstdlib>` из буфера.

Производитель получил строку `#include <thread>` из файла и пытается записать в буфер.

Производитель успешно записал строку `#include <thread>` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `#include <thread>` из буфера.

Производитель получил строку `#include <chrono>` из файла и пытается записать в буфер.

Производитель успешно записал строку `#include <chrono>` буфер.

Производитель получил строку `#include <iomanip>` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `#include <chrono>` из буфера.

Производитель получил строку `#include <iomanip>` из файла и пытается записать в буфер.

Производитель успешно записал строку `#include <iomanip>` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `#include <iomanip>` из буфера.

Производитель получил строку `#include <array>` из файла и пытается записать в буфер.

Производитель успешно записал строку `#include <array>` буфер.

Производитель получил строку `#include <omp.h>` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `#include <array>` из буфера.

Производитель получил строку `#include <omp.h>` из файла и пытается записать в буфер.

Производитель успешно записал строку `#include <omp.h>` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `#include <omp.h>` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `using namespace std;` из файла и пытается записать в буфер.

Производитель успешно записал строку `using namespace std;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `using namespace std;` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `omp_lock_t copy_lock;` из файла и пытается записать в буфер.

Производитель успешно записал строку `omp_lock_t copy_lock;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `omp_lock_t copy_lock;` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `int getMatrixSize() {` из файла и пытается записать в буфер.

Производитель успешно записал строку `int getMatrixSize() {` буфер.

Производитель получил строку `    int matrixSize;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `int getMatrixSize() {` из буфера.

Производитель получил строку `    int matrixSize;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int matrixSize;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int matrixSize;` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `    cout << "Введите размер матрицы: ";` из файла и пытается записать в буфер.

Производитель успешно записал строку `    cout << "Введите размер матрицы: ";` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    cout << "Введите размер матрицы: ";` из буфера.

Производитель получил строку `    cin >> matrixSize;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    cin >> matrixSize;` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    cin >> matrixSize;` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `    return matrixSize;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    return matrixSize;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    return matrixSize;` из буфера.

Производитель получил строку `}` из файла и пытается записать в буфер.

Производитель успешно записал строку `}` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `}` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `int** createMass(int n){` из файла и пытается записать в буфер.

Производитель успешно записал строку `int** createMass(int n){` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `int** createMass(int n){` из буфера.

Производитель получил строку `    int **mas;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int **mas;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int **mas;` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `    mas = (int**)malloc(n*sizeof(int*));` из файла и пытается записать в буфер.

Производитель успешно записал строку `    mas = (int**)malloc(n*sizeof(int*));` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    mas = (int**)malloc(n*sizeof(int*));` из буфера.

Производитель получил строку `    for(int i=0;i<n;i++)` из файла и пытается записать в буфер.

Производитель успешно записал строку `    for(int i=0;i<n;i++)` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    for(int i=0;i<n;i++)` из буфера.

Производитель получил строку `        mas[i]=(int*)malloc(n*sizeof(int));` из файла и пытается записать в буфер.

Производитель успешно записал строку `        mas[i]=(int*)malloc(n*sizeof(int));` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        mas[i]=(int*)malloc(n*sizeof(int));` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `    return mas;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    return mas;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    return mas;` из буфера.

Производитель получил строку `}` из файла и пытается записать в буфер.

Производитель успешно записал строку `}` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `}` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `int** fullMass(int **mas, int n){` из файла и пытается записать в буфер.

Производитель успешно записал строку `int** fullMass(int **mas, int n){` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `int** fullMass(int **mas, int n){` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `    for (int i = 0; i < n; i++)` из файла и пытается записать в буфер.

Производитель успешно записал строку `    for (int i = 0; i < n; i++)` буфер.

Производитель получил строку `        for (int j = 0; j < n; j++)` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    for (int i = 0; i < n; i++)` из буфера.

Производитель получил строку `        for (int j = 0; j < n; j++)` из файла и пытается записать в буфер.

Производитель успешно записал строку `        for (int j = 0; j < n; j++)` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        for (int j = 0; j < n; j++)` из буфера.

Производитель получил строку `            mas[i][j] = rand()%10+1;` из файла и пытается записать в буфер.

Производитель успешно записал строку `            mas[i][j] = rand()%10+1;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            mas[i][j] = rand()%10+1;` из буфера.

Производитель получил строку `    return mas;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    return mas;` буфер.

Производитель получил строку `}` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    return mas;` из буфера.

Производитель получил строку `}` из файла и пытается записать в буфер.

Производитель успешно записал строку `}` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `}` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `void producer_actions(int **&matrix, int n, string & buffer){` из файла и пытается записать в буфер.

Производитель успешно записал строку `void producer_actions(int **&matrix, int n, string & buffer){` буфер.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `void producer_actions(int **&matrix, int n, string & buffer){` из буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int save_i = 0;` буфер.

Производитель получил строку `    int save_j = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_j = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `    int save_j = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int save_i = 0;` из буфера.

Производитель получил строку `    int save_j = 0;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int save_j = 0;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int save_j = 0;` из буфера.

Производитель получил строку `    int i = 0;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int i = 0;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int i = 0;` из буфера.

Производитель получил строку `    int j = 0;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int j = 0;` буфер.

Производитель получил строку `    {` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int j = 0;` из буфера.

Производитель получил строку `    {` из файла и пытается записать в буфер.

Производитель успешно записал строку `    {` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    {` из буфера.

Производитель получил строку `        this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 100));` из файла и пытается записать в буфер.

Производитель успешно записал строку `        this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 100));` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 100));` из буфера.

Производитель получил строку `        while (true) {` из файла и пытается записать в буфер.

Производитель успешно записал строку `        while (true) {` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        while (true) {` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `            omp_set_lock(&copy_lock);` из файла и пытается записать в буфер.

Производитель успешно записал строку `            omp_set_lock(&copy_lock);` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            omp_set_lock(&copy_lock);` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `            if (buffer == "") {` из файла и пытается записать в буфер.

Производитель успешно записал строку `            if (buffer == "") {` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            if (buffer == "") {` из буфера.

Производитель получил строку `                buffer = to_string(matrix[i][j]);` из файла и пытается записать в буфер.

Производитель успешно записал строку `                buffer = to_string(matrix[i][j]);` буфер.

Производитель получил строку `            } else {` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                buffer = to_string(matrix[i][j]);` из буфера.

Производитель получил строку `            } else {` из файла и пытается записать в буфер.

Производитель успешно записал строку `            } else {` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            } else {` из буфера.

Производитель получил строку `                i = save_i;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                i = save_i;` буфер.

Производитель получил строку `                j = save_j;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                i = save_i;` из буфера.

Производитель получил строку `                j = save_j;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                j = save_j;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                j = save_j;` из буфера.

Производитель получил строку `            }` из файла и пытается записать в буфер.

Производитель успешно записал строку `            }` буфер.

Производитель получил строку `            save_i = i;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            }` из буфера.

Производитель получил строку `            save_i = i;` из файла и пытается записать в буфер.

Производитель успешно записал строку `            save_i = i;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            save_i = i;` из буфера.

Производитель получил строку `            save_j = j;` из файла и пытается записать в буфер.

Производитель успешно записал строку `            save_j = j;` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            save_j = j;` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `            if (j < n - 1) {` из файла и пытается записать в буфер.

Производитель успешно записал строку `            if (j < n - 1) {` буфер.

Производитель получил строку `                j++;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            if (j < n - 1) {` из буфера.

Производитель получил строку `                j++;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                j++;` буфер.

Производитель получил строку `            } else {` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                j++;` из буфера.

Производитель получил строку `            } else {` из файла и пытается записать в буфер.

Производитель успешно записал строку `            } else {` буфер.

Производитель получил строку `                j = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            } else {` из буфера.

Производитель получил строку `                j = 0;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                j = 0;` буфер.

Производитель получил строку `                if (i < n - 1)` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                j = 0;` из буфера.

Производитель получил строку `                if (i < n - 1)` из файла и пытается записать в буфер.

Производитель успешно записал строку `                if (i < n - 1)` буфер.

Производитель получил строку `                    i++;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                if (i < n - 1)` из буфера.

Производитель получил строку `                    i++;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                    i++;` буфер.

Производитель получил строку `                else {` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                    i++;` из буфера.

Производитель получил строку `                else {` из файла и пытается записать в буфер.

Производитель успешно записал строку `                else {` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                else {` из буфера.

Производитель получил строку `                    omp_unset_lock(&copy_lock);` из файла и пытается записать в буфер.

Производитель успешно записал строку `                    omp_unset_lock(&copy_lock);` буфер.

Производитель получил строку `                    break;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                    omp_unset_lock(&copy_lock);` из буфера.

Производитель получил строку `                    break;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                    break;` буфер.

Производитель получил строку `                }` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                    break;` из буфера.

Производитель получил строку `                }` из файла и пытается записать в буфер.

Производитель успешно записал строку `                }` буфер.

Производитель получил строку `            }` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                }` из буфера.

Производитель получил строку `            }` из файла и пытается записать в буфер.

Производитель успешно записал строку `            }` буфер.

Производитель получил строку `            omp_unset_lock(&copy_lock);` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            }` из буфера.

Производитель получил строку `            omp_unset_lock(&copy_lock);` из файла и пытается записать в буфер.

Производитель успешно записал строку `            omp_unset_lock(&copy_lock);` буфер.

Производитель получил строку `            this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 50));` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            omp_unset_lock(&copy_lock);` из буфера.

Производитель получил строку `            this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 50));` из файла и пытается записать в буфер.

Производитель успешно записал строку `            this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 50));` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 50));` из буфера.

Производитель получил строку `        }` из файла и пытается записать в буфер.

Производитель успешно записал строку `        }` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        }` из буфера.

Производитель получил строку `    }` из файла и пытается записать в буфер.

Производитель успешно записал строку `    }` буфер.

Производитель получил строку `}` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    }` из буфера.

Производитель получил строку `}` из файла и пытается записать в буфер.

Производитель успешно записал строку `}` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `}` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `void consumer_actions(int **&matrix, int n, string & buffer){` из файла и пытается записать в буфер.

Производитель успешно записал строку `void consumer_actions(int **&matrix, int n, string & buffer){` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `void consumer_actions(int **&matrix, int n, string & buffer){` из буфера.

Производитель получил строку `    int save_i = 0;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int save_i = 0;` буфер.

Производитель получил строку `    int save_j = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int save_i = 0;` из буфера.

Производитель получил строку `    int save_j = 0;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int save_j = 0;` буфер.

Производитель получил строку `    int i = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int save_j = 0;` из буфера.

Производитель получил строку `    int i = 0;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int i = 0;` буфер.

Производитель получил строку `    int j = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int i = 0;` из буфера.

Производитель получил строку `    int j = 0;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int j = 0;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int j = 0;` из буфера.

Производитель получил строку `    {` из файла и пытается записать в буфер.

Производитель успешно записал строку `    {` буфер.

Производитель получил строку `        this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 100));` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `        this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 100));` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    {` из буфера.

Производитель получил строку `        this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 100));` из файла и пытается записать в буфер.

Производитель успешно записал строку `        this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 100));` буфер.

Производитель получил строку `        while (true) {` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 100));` из буфера.

Производитель получил строку `        while (true) {` из файла и пытается записать в буфер.

Производитель успешно записал строку `        while (true) {` буфер.

Производитель получил строку `            omp_set_lock(&copy_lock);` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        while (true) {` из буфера.

Производитель получил строку `            omp_set_lock(&copy_lock);` из файла и пытается записать в буфер.

Производитель успешно записал строку `            omp_set_lock(&copy_lock);` буфер.

Производитель получил строку `          //  cout << omp_get_thread_num() << endl;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            omp_set_lock(&copy_lock);` из буфера.

Производитель получил строку `          //  cout << omp_get_thread_num() << endl;` из файла и пытается записать в буфер.

Производитель успешно записал строку `          //  cout << omp_get_thread_num() << endl;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `          //  cout << omp_get_thread_num() << endl;` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `            if (buffer != "") {` из файла и пытается записать в буфер.

Производитель успешно записал строку `            if (buffer != "") {` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            if (buffer != "") {` из буфера.

Производитель получил строку `                matrix[i][j] = atoi(buffer.c_str());` из файла и пытается записать в буфер.

Производитель успешно записал строку `                matrix[i][j] = atoi(buffer.c_str());` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                matrix[i][j] = atoi(buffer.c_str());` из буфера.

Производитель получил строку `                buffer = "";` из файла и пытается записать в буфер.

Производитель успешно записал строку `                buffer = "";` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                buffer = "";` из буфера.

Производитель получил строку `            } else {` из файла и пытается записать в буфер.

Производитель успешно записал строку `            } else {` буфер.

Производитель получил строку `                if (i == 0 && j == 0) {` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            } else {` из буфера.

Производитель получил строку `                if (i == 0 && j == 0) {` из файла и пытается записать в буфер.

Производитель успешно записал строку `                if (i == 0 && j == 0) {` буфер.

Производитель получил строку `                    omp_unset_lock(&copy_lock);` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                if (i == 0 && j == 0) {` из буфера.

Производитель получил строку `                    omp_unset_lock(&copy_lock);` из файла и пытается записать в буфер.

Производитель успешно записал строку `                    omp_unset_lock(&copy_lock);` буфер.

Производитель получил строку `                    continue;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                    omp_unset_lock(&copy_lock);` из буфера.

Производитель получил строку `                    continue;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                    continue;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                    continue;` из буфера.

Производитель получил строку `                }` из файла и пытается записать в буфер.

Производитель успешно записал строку `                }` буфер.

Производитель получил строку `                i = save_i;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                }` из буфера.

Производитель получил строку `                i = save_i;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                i = save_i;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                i = save_i;` из буфера.

Производитель получил строку `                j = save_j;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                j = save_j;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                j = save_j;` из буфера.

Производитель получил строку `            }` из файла и пытается записать в буфер.

Производитель успешно записал строку `            }` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            }` из буфера.

Производитель получил строку `            save_i = i;` из файла и пытается записать в буфер.

Производитель успешно записал строку `            save_i = i;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            save_i = i;` из буфера.

Производитель получил строку `            save_j = j;` из файла и пытается записать в буфер.

Производитель успешно записал строку `            save_j = j;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            save_j = j;` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `            if (j < n - 1) {` из файла и пытается записать в буфер.

Производитель успешно записал строку `            if (j < n - 1) {` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            if (j < n - 1) {` из буфера.

Производитель получил строку `                j++;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                j++;` буфер.

Производитель получил строку `            } else {` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                j++;` из буфера.

Производитель получил строку `            } else {` из файла и пытается записать в буфер.

Производитель успешно записал строку `            } else {` буфер.

Производитель получил строку `                j = 0;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            } else {` из буфера.

Производитель получил строку `                j = 0;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                j = 0;` буфер.

Производитель получил строку `                if (i < n - 1)` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                j = 0;` из буфера.

Производитель получил строку `                if (i < n - 1)` из файла и пытается записать в буфер.

Производитель успешно записал строку `                if (i < n - 1)` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                if (i < n - 1)` из буфера.

Производитель получил строку `                    i++;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                    i++;` буфер.

Производитель получил строку `                else {` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                    i++;` из буфера.

Производитель получил строку `                else {` из файла и пытается записать в буфер.

Производитель успешно записал строку `                else {` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                else {` из буфера.

Производитель получил строку `                    omp_unset_lock(&copy_lock);` из файла и пытается записать в буфер.

Производитель успешно записал строку `                    omp_unset_lock(&copy_lock);` буфер.

Производитель получил строку `                    break;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                    omp_unset_lock(&copy_lock);` из буфера.

Производитель получил строку `                    break;` из файла и пытается записать в буфер.

Производитель успешно записал строку `                    break;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                    break;` из буфера.

Производитель получил строку `                }` из файла и пытается записать в буфер.

Производитель успешно записал строку `                }` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `                }` из буфера.

Производитель получил строку `            }` из файла и пытается записать в буфер.

Производитель успешно записал строку `            }` буфер.

Производитель получил строку `            omp_unset_lock(&copy_lock);` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            }` из буфера.

Производитель получил строку `            omp_unset_lock(&copy_lock);` из файла и пытается записать в буфер.

Производитель успешно записал строку `            omp_unset_lock(&copy_lock);` буфер.

Производитель получил строку `            this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 50));` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            omp_unset_lock(&copy_lock);` из буфера.

Производитель получил строку `            this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 50));` из файла и пытается записать в буфер.

Производитель успешно записал строку `            this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 50));` буфер.

Производитель получил строку `        }` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            this_thread::sleep_for(chrono::nanoseconds(100 + rand() % 50));` из буфера.

Производитель получил строку `        }` из файла и пытается записать в буфер.

Производитель успешно записал строку `        }` буфер.

Производитель получил строку `    }` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        }` из буфера.

Производитель получил строку `    }` из файла и пытается записать в буфер.

Производитель успешно записал строку `    }` буфер.

Производитель получил строку `}` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    }` из буфера.

Производитель получил строку `}` из файла и пытается записать в буфер.

Производитель успешно записал строку `}` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `}` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `void lookMatrix(int **mas1, int n){` из файла и пытается записать в буфер.

Производитель успешно записал строку `void lookMatrix(int **mas1, int n){` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `void lookMatrix(int **mas1, int n){` из буфера.

Производитель получил строку `    for (int i = 0; i < n; i++) {` из файла и пытается записать в буфер.

Производитель успешно записал строку `    for (int i = 0; i < n; i++) {` буфер.

Производитель получил строку `        for (int j = 0; j < n; j++)` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    for (int i = 0; i < n; i++) {` из буфера.

Производитель получил строку `        for (int j = 0; j < n; j++)` из файла и пытается записать в буфер.

Производитель успешно записал строку `        for (int j = 0; j < n; j++)` буфер.

Производитель получил строку `            cout << mas1[i][j] << " ";` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        for (int j = 0; j < n; j++)` из буфера.

Производитель получил строку `            cout << mas1[i][j] << " ";` из файла и пытается записать в буфер.

Производитель успешно записал строку `            cout << mas1[i][j] << " ";` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            cout << mas1[i][j] << " ";` из буфера.

Производитель получил строку `        cout << endl;` из файла и пытается записать в буфер.

Производитель успешно записал строку `        cout << endl;` буфер.

Производитель получил строку `    }` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        cout << endl;` из буфера.

Производитель получил строку `    }` из файла и пытается записать в буфер.

Производитель успешно записал строку `    }` буфер.

Производитель получил строку `}` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    }` из буфера.

Производитель получил строку `}` из файла и пытается записать в буфер.

Производитель успешно записал строку `}` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `}` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `void copyMatrix(){` из файла и пытается записать в буфер.

Производитель успешно записал строку `void copyMatrix(){` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `void copyMatrix(){` из буфера.

Производитель получил строку `    srand(time(NULL));` из файла и пытается записать в буфер.

Производитель успешно записал строку `    srand(time(NULL));` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    srand(time(NULL));` из буфера.

Производитель получил строку `    const int size_m = 5;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    const int size_m = 5;` буфер.

Производитель получил строку `    string buffer;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    const int size_m = 5;` из буфера.

Производитель получил строку `    string buffer;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    string buffer;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    string buffer;` из буфера.

Производитель получил строку `    int n = getMatrixSize();` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int n = getMatrixSize();` буфер.

Производитель получил строку `    cout << "Размер матрицы: "<<size_m<<endl;` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int n = getMatrixSize();` из буфера.

Производитель получил строку `    cout << "Размер матрицы: "<<size_m<<endl;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    cout << "Размер матрицы: "<<size_m<<endl;` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    cout << "Размер матрицы: "<<size_m<<endl;` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `    int **m1 = createMass(n);` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int **m1 = createMass(n);` буфер.

Производитель получил строку `    fullMass(m1,n);` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int **m1 = createMass(n);` из буфера.

Производитель получил строку `    fullMass(m1,n);` из файла и пытается записать в буфер.

Производитель успешно записал строку `    fullMass(m1,n);` буфер.

Производитель получил строку `    int **m2 = createMass(n);` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    fullMass(m1,n);` из буфера.

Производитель получил строку `    int **m2 = createMass(n);` из файла и пытается записать в буфер.

Производитель успешно записал строку `    int **m2 = createMass(n);` буфер.

Производитель получил строку `    fullMass(m2,n);` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    int **m2 = createMass(n);` из буфера.

Производитель получил строку `    fullMass(m2,n);` из файла и пытается записать в буфер.

Производитель успешно записал строку `    fullMass(m2,n);` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    fullMass(m2,n);` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `    cout << "Матрица А:"<< endl;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    cout << "Матрица А:"<< endl;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    cout << "Матрица А:"<< endl;` из буфера.

Производитель получил строку `    lookMatrix(m1,n);` из файла и пытается записать в буфер.

Производитель успешно записал строку `    lookMatrix(m1,n);` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    lookMatrix(m1,n);` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Производитель получил строку `    omp_init_lock(&copy_lock);` из файла и пытается записать в буфер.

Производитель успешно записал строку `    omp_init_lock(&copy_lock);` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    omp_init_lock(&copy_lock);` из буфера.

Производитель получил строку `#pragma omp parallel sections num_threads(2)` из файла и пытается записать в буфер.

Производитель успешно записал строку `#pragma omp parallel sections num_threads(2)` буфер.

Производитель получил строку `    {` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `#pragma omp parallel sections num_threads(2)` из буфера.

Производитель получил строку `    {` из файла и пытается записать в буфер.

Производитель успешно записал строку `    {` буфер.

Производитель получил строку `#pragma omp section` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    {` из буфера.

Производитель получил строку `#pragma omp section` из файла и пытается записать в буфер.

Производитель успешно записал строку `#pragma omp section` буфер.

Производитель получил строку `        {` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `#pragma omp section` из буфера.

Производитель получил строку `        {` из файла и пытается записать в буфер.

Производитель успешно записал строку `        {` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        {` из буфера.

Производитель получил строку `            producer_actions(m1,n, buffer);` из файла и пытается записать в буфер.

Производитель успешно записал строку `            producer_actions(m1,n, buffer);` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            producer_actions(m1,n, buffer);` из буфера.

Производитель получил строку `        }` из файла и пытается записать в буфер.

Производитель успешно записал строку `        }` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        }` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `#pragma omp section` из файла и пытается записать в буфер.

Производитель успешно записал строку `#pragma omp section` буфер.

Производитель получил строку `        {` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `#pragma omp section` из буфера.

Производитель получил строку `        {` из файла и пытается записать в буфер.

Производитель успешно записал строку `        {` буфер.

Производитель получил строку `            consumer_actions(m2,n, buffer);` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        {` из буфера.

Производитель получил строку `            consumer_actions(m2,n, buffer);` из файла и пытается записать в буфер.

Производитель успешно записал строку `            consumer_actions(m2,n, buffer);` буфер.

Производитель получил строку `        }` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `            consumer_actions(m2,n, buffer);` из буфера.

Производитель получил строку `        }` из файла и пытается записать в буфер.

Производитель успешно записал строку `        }` буфер.

Производитель получил строку `    }` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `        }` из буфера.

Производитель получил строку `    }` из файла и пытается записать в буфер.

Производитель успешно записал строку `    }` буфер.

Производитель получил строку `    omp_destroy_lock(&copy_lock);` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    }` из буфера.

Производитель получил строку `    omp_destroy_lock(&copy_lock);` из файла и пытается записать в буфер.

Производитель успешно записал строку `    omp_destroy_lock(&copy_lock);` буфер.

Производитель получил строку `` из файла и пытается записать в буфер.

Буфер заполнен. Производитель ожидает освобождение буфера.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    omp_destroy_lock(&copy_lock);` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `    cout << "\nМатрица Б:"<< endl;` из файла и пытается записать в буфер.

Производитель успешно записал строку `    cout << "\nМатрица Б:"<< endl;` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    cout << "\nМатрица Б:"<< endl;` из буфера.

Производитель получил строку `    lookMatrix(m2,n);` из файла и пытается записать в буфер.

Производитель успешно записал строку `    lookMatrix(m2,n);` буфер.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `    lookMatrix(m2,n);` из буфера.

Производитель получил строку `` из файла и пытается записать в буфер.

Производитель успешно записал строку `` буфер.

Потребитель пытается считать строку из буфера.

Буфер пуст. Потребитель ожидает пополнения буфера.

Производитель получил строку `}` из файла и пытается записать в буфер.

Производитель успешно записал строку `}` буфер.

Производитель встретил конец файла.

Потребитель пытается считать строку из буфера.

Потребитель успешно считал строку `}` из буфера.

Потребитель пытается считать строку из буфера.

Производитель встретил конец файла.

